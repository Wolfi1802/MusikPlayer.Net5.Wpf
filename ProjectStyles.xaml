<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <BitmapImage x:Key="BackgroundPicture" UriSource="pack://application:,,,/Resources/Background.png" />

    <!--button-->
    <LinearGradientBrush x:Key="ButtonBackground">
        <GradientStop Offset="0.0" Color="Gray" />
        <GradientStop Offset="0.5" Color="silver" />
        <GradientStop Offset="1.0" Color="White" />
    </LinearGradientBrush>

    <!--window-->
    <LinearGradientBrush x:Key="WindowHeaderBackground">
        <GradientStop Offset="0.0" Color="White" />
        <GradientStop Offset="0.2" Color="#FFB0B0B0" />
        <GradientStop Offset="1.0" Color="#FF656565" />
    </LinearGradientBrush>

    <!--progressbar-->
    <SolidColorBrush x:Key="ProgressBarBorderBrush" Color="White" />
    <SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ProgressBarTrackBackgroundBrush" Color="DarkGoldenrod" />

    <!--slider-->
    <SolidColorBrush x:Key="GlyphColor" Color="Gray" />
    <SolidColorBrush x:Key="DefaultTrackBorder" Color="Gray"/>
    <SolidColorBrush x:Key="DefaultTrackBackground" Color="LightGray"/>
    <SolidColorBrush x:Key="ScrollMarkStroke" Color="Gray"/>
    <SolidColorBrush x:Key="ScrollMarkFill" Color="White"/>
    <!--checkbox-->
    <Style x:Key="FavoriteCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.Background>
                                <SolidColorBrush Color="Transparent"/>
                            </Grid.Background>
                            <Path x:Name="Click" Fill="Black" 
                                  Data="M 9,0 L 7,6 L 0,6 L 6,11 L 4,17 L 9,12 L 14,17 L 12,11 L 18,6 L 11,6 L 9,0"/>
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Click" Property="Fill" Value="Yellow" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Click" Property="Fill" Value="white"/>
                            <Setter TargetName="Click" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Ellipse-->
    <Style x:Key="EllipseStyle" TargetType="{x:Type Ellipse}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="StrokeThickness" Value="20"/>
        <Setter Property="Height" Value="400"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
        <Setter Property="StrokeDashArray" Value="235 78"/>
    </Style>

    <!--Label-->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="LabelHeaderStyle" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="SoundItemLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!--Button-->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template" Value="{DynamicResource ButtonCustom}"/>
    </Style>
    <ControlTemplate x:Key="ButtonCustom" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <Border x:Name="border" BorderBrush="Gray" BorderThickness="1" Background="{DynamicResource ButtonBackground}" CornerRadius="2">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="lightgray"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="darkgray"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="grid" Value="0.80"/>
                <Setter Property="Background" TargetName="border" Value="darkgray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="InvisibleButtonStyle" TargetType="Button">
        <Setter Property="Template" Value="{DynamicResource InvisibleButtonTemplate}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <ControlTemplate x:Key="InvisibleButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <Border x:Name="border" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" CornerRadius="2">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--textblock-->
    <Style x:Key="SoundItemTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--textbox-->

    <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}" xmlns:sys="clr-namespace:System;assembly=mscorlib">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Center" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Suche nach Name..." Foreground="LightGray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputTextBoxStyle" TargetType="{x:Type TextBox}" xmlns:sys="clr-namespace:System;assembly=mscorlib">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Center" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Tippe deine Eingabe hier ein" Foreground="LightGray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RunTextTextBox" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--progressbar-->
    <Style x:Key="ProgressBarAnimatedStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template" Value="{DynamicResource AnimatedProgessBarTemplate}">
        </Setter>
    </Style>

    <!--Slider-->
    <Style x:Key="{x:Type Slider}" TargetType="Slider">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="5"/>
        <Setter Property="TickPlacement" Value="BottomRight"/>
        <Setter Property="TickFrequency" Value="5"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="TickPlacement" Value="BottomRight"/>
                <Setter Property="Template" Value="{DynamicResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="TickPlacement" Value="BottomRight"/>
                <Setter Property="Template" Value="{DynamicResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ListView-->

    <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template" Value="{DynamicResource ListBoxItemCustom}"/>
    </Style>

    <ControlTemplate x:Key="ScrollMarkTemplateThumb" TargetType="{x:Type Thumb}">
        <Path x:Name="ScrollMark" Data="M 0,0 L14,0 L7,14 z"  StrokeThickness="0.7" Stroke="{StaticResource ScrollMarkStroke}" Fill="{StaticResource ScrollMarkFill}" Cursor="Hand"></Path>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" Value="gray" TargetName="ScrollMark"/>
                <Setter Property="Fill" Value="lightgray" TargetName="ScrollMark"/>
            </Trigger>

            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Stroke" Value="DarkGray" TargetName="ScrollMark"/>
                <Setter Property="Fill" Value="darkgray" TargetName="ScrollMark"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable"  Value="false" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height"  Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template" Value="{DynamicResource ScrollMarkTemplateThumb}"/>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"  MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Top" Height="4" Grid.Row="0" Visibility="Collapsed" Fill="{StaticResource GlyphColor}"/>

            <Border x:Name="TrackBackground"  Margin="0" CornerRadius="2"  Height="4"  Grid.Row="1"  BorderThickness="1" BorderBrush="{StaticResource DefaultTrackBorder}" Background="{StaticResource DefaultTrackBackground}"/>

            <Track Grid.Row="1"  x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>

            <TickBar x:Name="BottomTick" SnapsToDevicePixels="True" Height="4" Grid.Row="2" Placement="Bottom" Visibility="Collapsed" Fill="{StaticResource GlyphColor}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility"  Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"  Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility"   Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"  MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Top" Height="4" Grid.Row="0" Visibility="Collapsed" Fill="{StaticResource GlyphColor}"/>

            <Border x:Name="TrackBackground"  Margin="0" CornerRadius="2"  Width="4" Grid.Column="1"  BorderThickness="5" BorderBrush="{StaticResource DefaultTrackBorder}" Background="{StaticResource DefaultTrackBackground}"/>

            <Track Grid.Column="1"  x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"  Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>

            <TickBar x:Name="BottomTick" SnapsToDevicePixels="True" Height="4" Grid.Row="2" Placement="Bottom" Visibility="Collapsed" Fill="{StaticResource GlyphColor}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxItemCustom" TargetType="ListBoxItem">
        <Border
                          Name="Border"
                          Height="{TemplateBinding Height}"
                          Padding="0"
                          Margin="0,1,0,0"
                          SnapsToDevicePixels="True"
                          Background="Transparent">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.3"/>
                        <!--<ImageBrush ImageSource="{DynamicResource BackgroundPicture}" Stretch="None"/>-->
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="CornerRadius" Value="2"></Setter>
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.3"/>
                        <!--<ImageBrush ImageSource="{DynamicResource BackgroundPicture}" Stretch="None"/>-->
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="CornerRadius" Value="2"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="GridViewColumnHeaderCustom" TargetType="GridViewColumnHeader">
        <Grid Height="21">
            <Border Name="HeaderBorder"
            BorderThickness="0,0,0,1"
            BorderBrush="white"
            Background="Transparent"
            Padding="0,0,2,0">
                <ContentPresenter Name="HeaderContent"
              Margin="0"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              RecognizesAccessKey="True"                                              
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{DynamicResource GridViewColumnHeaderGripper}"/>
            <Rectangle VerticalAlignment="Stretch" Fill="LightGray" HorizontalAlignment="Right" Margin="0,2,0,2" Width="2"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="HeaderBorder" Property="Background" Value="#FF353638"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="HeaderBorder"  Property="Background" Value="black"/>
                <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Template" Value="{DynamicResource ThumbCustom}"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>

    <ControlTemplate x:Key="ThumbCustom" TargetType="{x:Type Thumb}">
        <Border Padding="{TemplateBinding Padding}"
                Background="Transparent">
            <Rectangle HorizontalAlignment="Center"
                     Width="1"
                     Fill="{TemplateBinding Background}" />
        </Border>
    </ControlTemplate>

    <!--ProgressBar-->
    <ControlTemplate x:Key="AnimatedProgessBarTemplate" TargetType="{x:Type ProgressBar}">
        <Border x:Name="BorderBackground" CornerRadius="3" BorderThickness="1"
                            BorderBrush="{StaticResource ProgressBarBorderBrush}"
                            Background="{StaticResource ProgressBarBackgroundBrush}">
            <Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Determinate" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="PART_Track" Margin="0" BorderThickness="0" CornerRadius="3" />
                <Border x:Name="PART_Indicator" Margin="0" BorderThickness="0" CornerRadius="3" HorizontalAlignment="Left"
                                    Background="{StaticResource ProgressBarTrackBackgroundBrush}" ClipToBounds="True">
                    <Border x:Name="DiagonalDecorator" Width="5000">
                        <Border.Background>
                            <DrawingBrush TileMode="Tile" Stretch="None" Viewbox="0,0,1,1" Viewport="0,0,36,34" ViewportUnits="Absolute">
                                <DrawingBrush.RelativeTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </DrawingBrush.RelativeTransform>
                                <DrawingBrush.Drawing>
                                    <GeometryDrawing Brush="orange" Geometry="M0,0 18,1 36,34 18,34 Z" />
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Border.Background>

                        <Border.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                                        Storyboard.TargetProperty="(Border.Background).(DrawingBrush.RelativeTransform).(TranslateTransform.X)"
                                                        From="0" To=".36" RepeatBehavior="Forever" Duration="0:0:30" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>

    <!--ScrollViewver-->
    <ControlTemplate x:Key="ScrollViewerCustom" TargetType="ScrollViewer">
        <Grid Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <DockPanel Margin="{TemplateBinding Padding}">
                <ScrollViewer DockPanel.Dock="Top"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          Focusable="false">
                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                          Columns="{Binding Path=TemplatedParent.View.Columns,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContainerStyle="{Binding
                Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplate="{Binding
                Path=TemplatedParent.View.ColumnHeaderTemplate,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplateSelector="{Binding 
                Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          AllowsColumnReorder="{Binding
                Path=TemplatedParent.View.AllowsColumnReorder,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContextMenu="{Binding
                Path=TemplatedParent.View.ColumnHeaderContextMenu,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderToolTip="{Binding
                Path=TemplatedParent.View.ColumnHeaderToolTip,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="{TemplateBinding
                SnapsToDevicePixels}" />
                </ScrollViewer>

                <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    CanContentScroll="True"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" />
            </DockPanel>

            <ScrollBar Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Value="{TemplateBinding HorizontalOffset}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">

            </ScrollBar>

            <ScrollBar Name="PART_VerticalScrollBar"
                     Grid.Column="1"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Value="{TemplateBinding VerticalOffset}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxScrollViewer" TargetType="ScrollViewer">
        <Grid Background="{TemplateBinding Background}" Margin="2,0,2,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <DockPanel Margin="{TemplateBinding Padding}">
                <ScrollViewer DockPanel.Dock="Top"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          Focusable="false">
                </ScrollViewer>

                <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    CanContentScroll="True"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" />
            </DockPanel>

            <ScrollBar Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Value="{TemplateBinding HorizontalOffset}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">

            </ScrollBar>

            <ScrollBar Name="PART_VerticalScrollBar"
                     Grid.Column="1"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Value="{TemplateBinding VerticalOffset}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

        </Grid>
    </ControlTemplate>

</ResourceDictionary>